# Variable setup.
- name: Include OS-specific variables.
  include_vars: "{{ ansible_os_family }}.yml" # Debian

- name: Include distribution and version-specific vars.
  include_vars: "{{ item }}"
  with_first_found:
    - files:
        - "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml" # Ubuntu-20
      skip: true

- name: Set the default PHP version for Debian-based OSes.
  set_fact:
    php_default_version_debian: "{{ __php_default_version_debian }}"
  when: php_default_version_debian is not defined and ansible_os_family == 'Debian'

## APT
- name: Installs the ppa:ondrej/php repo on Ubuntu systems
  apt_repository:
    repo: ppa:ondrej/php
    update_cache: true
  when: not php_install_from_source and ansible_distribution == 'Ubuntu'

- name: Installs the sury php repo on Debian systems
  apt_repository:
    repo: deb https://packages.sury.org/php/ {{ ansible_distribution_release }} main
    state: present
    update_cache: true
  when: not php_install_from_source and ansible_distribution == 'Debian'

# Debian-specific tasks.
- name: Add dependencies for PHP versions (Debian).
  apt:
    name:
      - apt-transport-https
      - ca-certificates
    state: present
  when: ansible_distribution == "Debian"

# Defines
- name: Define php_packages.
  set_fact:
    php_packages: "{{ __php_packages | list }}"
  when: php_packages is not defined

- name: Define php_webserver_daemon.
  set_fact:
    php_webserver_daemon: "{{ __php_webserver_daemon }}"
  when: php_webserver_daemon is not defined

- name: Define php_conf_paths.
  set_fact:
    php_conf_paths: "{{ __php_conf_paths }}"
  when: php_conf_paths is not defined

- name: Define php_extension_conf_paths.
  set_fact:
    php_extension_conf_paths: "{{ __php_extension_conf_paths }}"
  when: php_extension_conf_paths is not defined

- name: Define php_apc_conf_filename.
  set_fact:
    php_apc_conf_filename: "{{ __php_apc_conf_filename }}"
  when: php_apc_conf_filename is not defined

- name: Define php_opcache_conf_filename (Ubuntu 16.04).
  set_fact:
    php_opcache_conf_filename: "10-opcache.ini"
  when: php_opcache_conf_filename is not defined and ansible_distribution_version == "16.04"

- name: Define php_opcache_conf_filename.
  set_fact:
    php_opcache_conf_filename: "{{ __php_opcache_conf_filename }}"
  when: php_opcache_conf_filename is not defined

- name: Define php_fpm_conf_path.
  set_fact:
    php_fpm_conf_path: "{{ __php_fpm_conf_path }}"
  when: php_fpm_conf_path is not defined

# Setup/install tasks.
- include_tasks: setup-RedHat.yml
  when:
    - not php_install_from_source
    - ansible_os_family == 'RedHat'

- include_tasks: setup-Debian.yml
  when:
    - not php_install_from_source
    - ansible_os_family == 'Debian'

# Install PHP from source when php_install_from_source is true.
- include_tasks: install-from-source.yml
  when: php_install_from_source

# Actually it'll required by pecl install
- name: Ensure dependencies for building from source are installed (Debian).
  apt:
    name: "{{ __required_packages }}"
    state: present
    update_cache: true
  when: ansible_os_family == 'Debian'

# Configure PHP.
- include_tasks: configure.yml
- include_tasks: configure-apcu.yml
- include_tasks: configure-opcache.yml
- include_tasks: configure-fpm.yml
  when: php_enable_php_fpm

- include_tasks: install-redis.yml
- include_tasks: install-mongodb.yml

# Composer
- name: Download and install Composer
  shell: curl -sS https://getcomposer.org/installer | php
  args:
    chdir: /usr/src/
    creates: /usr/local/bin/composer
    warn: false
  become: yes

- name: Add Composer to global path
  copy:
    dest: /usr/local/bin/composer
    group: root
    mode: '0755'
    owner: root
    src: /usr/src/composer.phar
    remote_src: yes
  become: yes
