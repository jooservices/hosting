---
- name: Check current "{{ exporter }}" version.
  command: "{{ exporter_bin_path }} --version"
  failed_when: false
  changed_when: false
  register: exporter_version_check

- name: Download and unarchive "{{ exporter }}" into temporary location.
  unarchive:
    src: "{{ exporter_download_url }}"
    dest: /tmp
    remote_src: true
    mode: 0755
#  when: >
#    exporter_version_check.stdout is not defined
#    or exporter_version not in exporter_version_check.stdout
#  register: exporter_download_check

- name: Move "{{ exporter }}" binary into place.
  copy:
    src: "/tmp/node_exporter-{{ exporter_version }}.linux-{{ exporter_arch }}/node_exporter"
    dest: "{{ exporter_bin_path }}"
    mode: 0755
    remote_src: true
  notify: restart "{{ exporter }}"
#  when: exporter_download_check is changed

- name: Create "{{ exporter }}" group.
  group:
    name: "{{ exporter }}"

- name: Create "{{ exporter }}" user.
  user:
    name: "{{ exporter }}"
    group: "{{ exporter }}"
    shell: /sbin/nologin
    create_home: false
    state: present
    system: true

- name: Copy the "{{ exporter }}" systemd unit file.
  template:
    src: "service.j2"
    dest: "/etc/systemd/system/{{ exporter }}.service"
    mode: 0644
  register: exporter_service

- name: Reload systemd daemon if unit file is changed.
  systemd:
    daemon_reload: true
  notify: restart "{{ exporter }}"
  when: exporter_service is changed

- name: Ensure "{{ exporter }}" is running and enabled at boot.
  service:
    name: "{{ exporter }}"
    state: "{{ exporter_state }}"
    enabled: "{{ exporter_enabled }}"

- name: Verify "{{ exporter }}" is responding to requests.
  uri:
    url: http://localhost:9100/
    return_content: true
  register: metrics_output
  failed_when: "'Metrics' not in metrics_output.content"
