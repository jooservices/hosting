---
- name: Check current redis_exporter version.
  command: "{{ redis_exporter_bin_path }} --version"
  failed_when: false
  changed_when: false
  register: redis_exporter_version_check

- name: Download and unarchive redis_exporter into temporary location.
  unarchive:
    src: "{{ redis_exporter_download_url }}"
    dest: /tmp
    remote_src: true
    mode: 0755
  when: >
    redis_exporter_version_check.stdout is not defined
    or redis_exporter_version not in redis_exporter_version_check.stdout
  register: redis_exporter_download_check

- name: Move redis_exporter binary into place.
  copy:
    src: "/tmp/redis_exporter-v{{ redis_exporter_version }}.linux-{{ redis_exporter_arch }}/redis_exporter"
    dest: "{{ redis_exporter_bin_path }}"
    mode: 0755
    remote_src: true
  notify: restart redis_exporter
  when: redis_exporter_download_check is changed

- name: Create redis_exporter user.
  user:
    name: redis_exporter
    shell: /sbin/nologin
    state: present

- name: Copy the redis_exporter systemd unit file.
  template:
    src: redis_exporter.service.j2
    dest: /etc/systemd/system/redis_exporter.service
    mode: 0644
  register: redis_exporter_service

- name: Reload systemd daemon if unit file is changed.
  systemd:
    daemon_reload: true
  notify: restart redis_exporter
  when: redis_exporter_service is changed

- name: Ensure redis_exporter is running and enabled at boot.
  service:
    name: redis_exporter
    state: "{{ redis_exporter_state }}"
    enabled: "{{ redis_exporter_enabled }}"

- name: Verify redis_exporter is responding to requests.
  uri:
    url: http://localhost:9100/
    return_content: true
  register: metrics_output
  failed_when: "'Metrics' not in metrics_output.content"
