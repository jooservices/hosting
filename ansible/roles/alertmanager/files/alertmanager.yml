global:
  # The smarthost and SMTP sender used for mail notifications.
  smtp_smarthost: 'localhost:25'
  smtp_from: 'alertmanager@example.org'
  smtp_auth_username: 'alertmanager'
  smtp_auth_password: 'password'

  slack_api_url: '<slack-hook-url>'
  #telegram_api_url: https://api.telegram.org
  resolve_timeout: 1m

receivers:
  - name: print-alert-routing
#    webhook_configs:
#      - url: http://108.61.86.13:5001

  - name: 'telegram'
    telegram_configs:
      - bot_token: 'token' # https://telegram.me/BotFather
        chat_id: 'id' # https://api.telegram.org/bot[TOKEN]/getUpdates
        api_url: "https://api.telegram.org"
        parse_mode: 'HTML'
        message: "{{ template \"telegram.default.message\" .}}"

  # Slack notifications are sent via Slack webhooks. The notification contains an attachment.
  - name: 'slack-notifications'
    slack_configs:
      - channel: 'alert'
        send_resolved: true # Whether to notify about resolved alerts.
        color: '{{ template "slack.default.color" . }}'
        title: '{{ template "slack.default.title" . }}'
        title_link: '{{ template "slack.default.titlelink" . }}'
        text: |-
          {{ if eq .Status "firing" }}{{ if eq .GroupLabels.severity "critical"}}<!channel>{{ end }}{{ end }}
          {{ range .Alerts }}
            *Description:* {{ .Annotations.description }}
            *Details:*
            {{ range .Labels.SortedPairs }} â€¢ *{{ .Name }}:* `{{ .Value }}`
            {{ end }}
          {{ end }}
        fallback: '{{ template "slack.default.fallback" . }}'
        icon_emoji: '{{ template "slack.default.iconemoji" . }}'
        icon_url: '{{ template "slack.default.iconurl" . }}'

templates:
  - '/etc/alertmanager/template-notification.tmpl'

route:
  group_by: [ alertname, severity ]
  group_wait: 10s
  group_interval: 30s
  receiver: print-alert-routing
  repeat_interval: 30m
  routes:
    - receiver: slack-notifications
      continue: true

#    - receiver: print-alert-routing
#      continue: true

    - receiver: telegram
      continue: true