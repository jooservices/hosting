---
- name: Check current {{ exporter_name }} version.
  command: "{{ exporter_bin_path }} --version"
  failed_when: false
  changed_when: false
  register: exporter_version_check

- name: Download and unarchive {{ exporter_name }} into temporary location.
  unarchive:
    src: "{{ exporter_download_url }}"
    dest: /tmp
    remote_src: true
    mode: 0755
  when: >
    exporter_version_check.stdout is not defined
    or exporter_version not in exporter_version_check.stdout
  register: exporter_download_check

- name: Move {{ exporter_name }} binary into place.
  copy:
    src: "/tmp/node_exporter-{{ exporter_version }}.linux-{{ exporter_arch }}/{{ exporter_name }}"
    dest: "{{ exporter_bin_path }}"
    mode: 0755
    remote_src: true
  notify: restart {{ exporter_name }}
  when: exporter_download_check is changed

- name: Create user
  user:
    name: "{{ exporter_user }}"
    shell: /bin/false
    create_home: false
    state: present

- name: Copy the {{ exporter_name }} systemd unit file.
  template:
    src: exporter.service.j2
    dest: "{{ exporter_service_path }}"
    mode: 0644
  register: exporter_service

- name: Reload systemd daemon if unit file is changed.
  systemd:
    daemon_reload: true
  notify: restart {{ exporter_name }}
  when: exporter_service is changed

- name: Ensure {{ exporter_name }} is running and enabled at boot.
  service:
    name: "{{ exporter_name }}"
    state: "{{ exporter_state }}"
    enabled: "{{ exporter_enabled }}"

- name: Verify {{ exporter_name }} is responding to requests.
  uri:
    url: "http://localhost:{{ exporter_port }}/"
    return_content: true
  register: metrics_output
  failed_when: "'Metrics' not in metrics_output.content"
